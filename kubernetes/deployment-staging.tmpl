apiVersion: apps/v1
kind: Deployment
metadata:
  name: education-api-staging-app
  labels:
    app: education-api-staging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: education-api-staging-app
  template:
    metadata:
      labels:
        app: education-api-staging-app
    spec:
      containers:
        - name: education-api-staging-app
          image: ghcr.io/zooniverse/education-api:__IMAGE_TAG__
          resources:
            requests:
              memory: "250Mi"
              cpu: "50m"
            limits:
              memory: "700Mi"
              cpu: "500m"
          env:
            - name: RAILS_ENV
              value: staging
            - name: DOTENV_FILE
              value: "/run/secrets/environment"
          volumeMounts:
            - name: education-api-staging-environment
              mountPath: "/run/secrets/environment"
              subPath: "environment"
              readOnly: true
        - name: education-api-staging-sidekiq
          image: ghcr.io/zooniverse/education-api:__IMAGE_TAG__
          resources:
            requests:
              memory: "250Mi"
              cpu: "50m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          args: ["/app/scripts/docker/start-sidekiq.sh"]
          env:
            - name: SIDEKIQ_CONCURRENCY
              value: '5'
            - name: RAILS_ENV
              value: staging
            - name: DOTENV_FILE
              value: "/run/secrets/environment"
          volumeMounts:
            - name: education-api-staging-environment
              mountPath: "/run/secrets/environment"
              subPath: "environment"
              readOnly: true
      volumes:
        - name: education-api-staging-environment
          secret:
            secretName: education-api-staging-environment
---
apiVersion: v1
kind: Service
metadata:
  name: education-api-staging-app
spec:
  selector:
    app: education-api-staging-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: education-api-staging-redis
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: education-api-staging-redis
  labels:
    app: education-api-staging-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: education-api-staging-redis
  template:
    metadata:
      labels:
        app: education-api-staging-redis
    spec:
      tolerations:
       - key: "servicelife"
         operator: "Equal"
         value: "longlife"
         effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: servicelife
                operator: In
                values:
                - longlife
      containers:
        - name: education-api-staging-redis
          image: redis
          resources:
             requests:
               memory: "10Mi"
               cpu: "10m"
             limits:
               memory: "100Mi"
               cpu: "500m"
          volumeMounts:
          - name: education-api-staging-redis-data
            mountPath: "/data"
      volumes:
      - name: education-api-staging-redis-data
        persistentVolumeClaim:
          claimName: education-api-staging-redis
---
apiVersion: v1
kind: Service
metadata:
  name: education-api-staging-redis
spec:
  selector:
    app: education-api-staging-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: NodePort
